{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gQAmBeA,G,MAjBF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAE3B,OAEE,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,GAAMC,UAAU,eAC9D,gCACC,6BAAKH,IACL,4BAAIC,YCmBMK,EAxBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAElB,OACC,8BAEAA,EAAOC,KAAI,SAACC,EAAKC,GACjB,OACG,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KACbC,MAAOM,EAAOG,GAAGT,OAHfS,SCOIC,EAhBG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAGhC,OACC,qBAAKV,UAAU,MAAf,SACC,uBAAOA,UAAU,mCAAmCW,KAAK,SACzDC,YAAY,gBACZC,SAAUH,OCAEI,EATA,SAACC,GAEf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,SAApE,SACEJ,EAAMK,YCiBKC,E,kDApBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAS,GAHO,E,8DAOAC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAG1B,OAAGG,KAAKJ,MAAMC,SAEN,0DAGDG,KAAKX,MAAMK,a,GAjBOQ,aCqDZC,G,wDA9Cd,aAAc,IAAD,8BACZ,gBAYDC,eAAiB,SAACC,GAEjB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACZlB,OAAQ,GACR4B,YAAa,IAJF,E,gEAOM,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAG,EAAKZ,SAAS,CAACvB,OAAQmC,S,+BAU5B,IAAD,EAEuBb,KAAKJ,MAA5BlB,EAFA,EAEAA,OAAQ4B,EAFR,EAEQA,YACRQ,EAAiBpC,EAAOqC,QAAO,SAAArC,GACrC,OAAOA,EAAOP,KAAK6C,cAAcC,SAASX,EAAYU,kBAGxD,OAAItC,EAAOwC,OAMV,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQoC,WAVjB,6C,GA7BSK,IAAMjB,YCITkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAER,cAAC,EAAD,IACCC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.28cc89ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\nconst Card = ({name, email, id} ) => {\r\n\t\r\n\treturn (\r\n\r\n\t\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t\t<img alt=\"robot\" src={`https://robohash.org/${id}`} className=\"robo-photo\"/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t\t<p>{email}</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\n\r\nconst CardList = ({robots}) =>{\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t{\r\n\t\trobots.map((user,i) => {\r\n\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tid={robots[i].id }\r\n\t\t\t\t\t\tname={robots[i].name}\r\n\t\t\t\t\t    email={robots[i].email}\r\n\t\t\t\t    />\r\n\t\t\t\t  );\r\n\t})\r\n\t} \r\n  \t\t</div>\r\n\r\n\t);\r\n\r\n}\r\n\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" \r\n\t\t\tplaceholder=\"search robots\" \r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\nexport default SearchBox;","import Reacy from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\r\n\treturn(\r\n\t\t<div style={{overflowY: 'scroll', border:'5px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Scroll;","import React , {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError:false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\t\tthis.setState({hasError: true})\r\n\t}\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\r\n\t\t\treturn <h1>Oooops. This is not good</h1>\r\n\t\t}\r\n\t\t\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\nclass App extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\ncomponentDidMount(){\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t.then(response=>response.json())\r\n\t.then(users=> this.setState({robots: users}));\r\n\t\r\n}\r\n\tonSearchChange = (event) => {\r\n\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t\t\r\n\r\n\t\t\r\n\t}\r\n\trender(){\r\n\r\n\t\tconst {robots, searchfield} = this.state;\r\n\t\t\tconst filteredRobots = robots.filter(robots=>{\r\n\t\t\treturn robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t\r\n\t\t})\r\n\tif(!robots.length){\r\n\t\treturn <h1>Loading</h1>\r\n\t}else {\r\n\t\t\r\n\t\r\n\treturn (\r\n\t\t<div className=\"tc\">\r\n\t\t\t<h1 className=\"f1\">RoboFriends</h1>\r\n\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t<Scroll>\r\n\t\t\t\t<ErrorBoundry>\r\n\t\t   \t\t\t<CardList robots={filteredRobots}/>\r\n\t\t   \t\t</ErrorBoundry>\r\n\t\t   </Scroll>\r\n\t\t</div>\r\n\t);\r\n}\r\n}\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n\n\t<App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}